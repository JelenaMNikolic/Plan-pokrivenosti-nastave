/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.katedra;

import controller.Controller;
import domain.Katedra;
import domain.Nastavnik;
import form.FormMode;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import session.Session;
import validator.Validator;

/**
 *
 * @author Korisnik
 */
public class DialogNovaKatedra extends javax.swing.JDialog {

    int katedraId;

    /**
     * Creates new form DialogNovaKatedra
     */
    public DialogNovaKatedra(java.awt.Frame parent, boolean modal) {

    }

    public DialogNovaKatedra(java.awt.Frame aThis, boolean b, FormMode formMode) {
        super(aThis, b);
        initComponents();
        this.setLocationRelativeTo(null);
        Nastavnik ulogovan = Session.getInstance().getUlogovan();
        lblUlogovan.setText(ulogovan.toString());
        postaviKomponente(formMode);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblUlogovan = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDelatnostKatedre = new javax.swing.JTextArea();
        txtNazivKatedre = new javax.swing.JTextField();
        jBtnDodajKatedru = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Nastavnik"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUlogovan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUlogovan, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Katedra"));

        jLabel1.setText("Naziv katedre:");

        jLabel2.setText("Delatnost katedre:");

        txtDelatnostKatedre.setColumns(20);
        txtDelatnostKatedre.setRows(5);
        jScrollPane1.setViewportView(txtDelatnostKatedre);

        jBtnDodajKatedru.setText("Dodaj");
        jBtnDodajKatedru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDodajKatedruActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                            .addComponent(txtNazivKatedre)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnDodajKatedru, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNazivKatedre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnDodajKatedru)
                    .addComponent(btnIzmeni)
                    .addComponent(btnOk))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnDodajKatedruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDodajKatedruActionPerformed
        String naziv = txtNazivKatedre.getText().trim();
        String delatnost = txtDelatnostKatedre.getText().trim();
        if (Validator.getInstance().podaciZaKatedru(naziv, delatnost)) {
            try {
                Katedra katedra = new Katedra(-1, naziv, delatnost);
                int katedraId = Controller.getInstance().saveKatedra(katedra);
                katedra.setKatedraId(katedraId);
                FormPretraziKatedre fpk = new FormPretraziKatedre();
                fpk.addKatedra(katedra);
                JOptionPane.showMessageDialog(this, "Katedra je sacuvana.");
                this.dispose();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Podaci nisu ispravno popunjeni.");
        }
    }//GEN-LAST:event_jBtnDodajKatedruActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        String nazivKatedre = txtNazivKatedre.getText().trim();
        String delatnostKatedre = txtDelatnostKatedre.getText().trim();
        if (Validator.getInstance().podaciZaKatedru(nazivKatedre, delatnostKatedre)) {
            try {
                Katedra katedra = new Katedra(katedraId, nazivKatedre, delatnostKatedre);
                String poruka = Controller.getInstance().azurirajKatedru(katedra);
                JOptionPane.showMessageDialog(this, "Katedra je izmenjena.");
                FormPretraziKatedre fpk = (FormPretraziKatedre) this.getParent();
                fpk.updateData(katedra);
                this.dispose();
            } catch (Exception ex) {
                Logger.getLogger(DialogNovaKatedra.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Podaci nisu ispravno popunjeni.");
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton jBtnDodajKatedru;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblUlogovan;
    private javax.swing.JTextArea txtDelatnostKatedre;
    private javax.swing.JTextField txtNazivKatedre;
    // End of variables declaration//GEN-END:variables

    private void postaviKomponente(FormMode mode) {
        switch (mode) {
            case NOVI:
                btnIzmeni.setVisible(false);
                jBtnDodajKatedru.setVisible(true);
                btnOk.setVisible(false);
                break;
            case IZMENI:
                btnIzmeni.setVisible(true);
                jBtnDodajKatedru.setVisible(false);
                btnOk.setVisible(false);
                setKatedra();
                setTitle("Izmena katedre");
                break;
            case PRIKAZI:
                btnOk.setVisible(true);
                btnIzmeni.setVisible(false);
                jBtnDodajKatedru.setVisible(false);
                txtDelatnostKatedre.setEditable(false);
                txtNazivKatedre.setEditable(false);
                setTitle("Prikaz katedre");
                setKatedra();
                break;
        }
    }

    private void setKatedra() {
        if (!Session.getInstance().getParametriSK().isEmpty()) {
            Katedra katedra = (Katedra) Session.getInstance().getParametriSK().get("katedra");
            katedraId = katedra.getKatedraId();
            prikaziKatedru(katedra);
        } else {
            JOptionPane.showMessageDialog(this, "Greska! Katedra nije izabrana.");
            System.out.println("Mapa je prazna.");
        }

    }

    private void prikaziKatedru(Katedra katedra) {
        txtDelatnostKatedre.setText(katedra.getDelatnostKatedre());
        txtNazivKatedre.setText(katedra.getNazivKatedre());
    }
}
